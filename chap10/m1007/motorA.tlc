%% File : motorA.tlc
%% Created: Sun Apr  3 17:08:17 2005
%%
%% Description: 
%%   Real-Time Workshop wrapper functions interface generated for 
%%   S-function "motorA.c".
%%
%%         File generated by S-function Builder Block
%%
%%   For more information on using the Target Language with the 
%%   Real-Time Workshop, see the Target Language Compiler manual
%%   (under Real-Time Workshop) in the "Inlining S-Functions"
%%   chapter under the section and subsection:
%%     "Writing Block Target Files to Inline S-Functions",
%%        "Function-Based or Wrappered Code".
%%
%implements  motorA "C"
%% InitializeConditions =========================================================
%%
 %function InitializeConditions(block, system) Output
  { 
    real_T *xC   = %<RTMGet("ContStates")>;
    xC[0] =  0;
  }
 %endfunction
%% Function: Outputs ==========================================================
%%
%% Purpose:
%%      Code generation rules for mdlOutputs function.
%%
%function Outputs(block, system) Output
  %assign py0 = LibBlockOutputSignal(0, "", "", 0)
 { 
    real_T *pxc = %<RTMGet("ContStates")>;
    %<py0>=pxc[0];
  }  %%
%endfunction
%% Function: Derivatives ======================================================
%% Abstract:
%%      Derivatives
%%
%function Derivatives(block, system) Output
  %assign pu0 = LibBlockInputSignal(0, "", "", 0)
 { 
    real_T *dx  =  %<RTMGet("dX")>;
    dx[0]=0.5*%<pu0>;
  }
%endfunction 
%% [EOF] motorA.tlc






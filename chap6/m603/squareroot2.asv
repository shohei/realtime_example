function squareroot2(block)
  setup(block);
function setup(block)
  block.NumInputPorts  = 1;
  block.NumInputPortWidth  = 3;
  block.NumOutputPorts = 0;
  block.SetPreCompInpPortInfoToDynamic;
  block.SetPreCompOutPortInfoToDynamic;
  block.InputPort(1).DirectFeedthrough = true;
  block.SampleTimes = [-1 0];
  block.SetAccelRunOnTLC(true);
  block.RegBlockMethod('Outputs',    @Output);  

  function Output(block)
a=[-1; 0; 0];
b=[0; 2; 0];
c=[1; 0; 0];
d=[0; 0; 0.8];
h=[0;0;block.InputPort(1).Data(3)];
T=[1,0,0;0,1,0;0,0,1];
a=T*a+h;
b=T*b+h;
c=T*c+h;
d=T*d+h;
x=[a(1) b(1) c(1) a(1);d(1) d(1) d(1) d(1)];
y=[a(2) b(2) c(2) a(2);d(2) d(2) d(2) d(2)];
z=[a(3) b(3) c(3) a(3);d(3) d(3) d(3) d(3)];
colormap([1 0 0;0 1 0;0 0 1]);
col=[0 -1 1];
surf(x,y,z,col);
axis([-2 10 0 10 0 10]);

%block.OutputPort(1).Data = sqrt(block.InputPort(1).Data);

  
  
%  function spaceship3D(T,h)
%スペース・シップのモデル
%入力データ
%回転マトリックス
%平行移動ベクトル
%
%a=[-1 0 0];
%b=[0 2 0];
%c=[1 0 0];
%d=[0 0 0.8];
%a=a*T+h;
%b=b*T+h;
%c=c*T+h;
%d=d*T+h;
%x=[a(1) b(1) c(1) a(1);d(1) d(1) d(1) d(1)];
%y=[a(2) b(2) c(2) a(2);d(2) d(2) d(2) d(2)];
%z=[a(3) b(3) c(3) a(3);d(3) d(3) d(3) d(3)];
%colormap([1 0 0;0 1 0;0 0 1]);
%c=[0 -1 1];
%surf(x,y,z,c);
%axis([-2 10 0 10 0 10]);
